[
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "subprocess",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "subprocess",
        "description": "subprocess",
        "detail": "subprocess",
        "documentation": {}
    },
    {
        "label": "tempfile",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "tempfile",
        "description": "tempfile",
        "detail": "tempfile",
        "documentation": {}
    },
    {
        "label": "Flask",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "jsonify",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "request",
        "importPath": "flask",
        "description": "flask",
        "isExtraImport": true,
        "detail": "flask",
        "documentation": {}
    },
    {
        "label": "io",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "io",
        "description": "io",
        "detail": "io",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "redirect_stdout",
        "importPath": "contextlib",
        "description": "contextlib",
        "isExtraImport": true,
        "detail": "contextlib",
        "documentation": {}
    },
    {
        "label": "execute_script_in_jail",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def execute_script_in_jail(script):\n    \"\"\"Execute a Python script in an nsjail environment.\"\"\"\n    os.makedirs(SCRIPTS_DIR, exist_ok=True)\n    with tempfile.NamedTemporaryFile(\n        suffix=\".py\", delete=False, dir=SCRIPTS_DIR\n    ) as tmp:\n        tmp_path = tmp.name\n        wrapper_script = f\"\"\"\nimport io\nimport json",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "execute_script",
        "kind": 2,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "def execute_script():\n    \"\"\"Execute a Python script in a sandboxed environment.\"\"\"\n    if not request.is_json:\n        return jsonify({\"error\": \"Request must be JSON\"}), 400\n    data = request.get_json()\n    script = data.get(\"script\")\n    if not script or not isinstance(script, str):\n        err_msg = \"Missing or invalid 'script' key in JSON body\"\n        return jsonify({\"error\": err_msg}), 400\n    if \"def main\" not in script:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "app",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "app = Flask(__name__)\nNSJAIL_PATH = \"/usr/bin/nsjail\"\nPYTHON_PATH = \"/usr/local/bin/python3\"\nNSJAIL_CONFIG_PATH = \"/app/nsjail.config\"\nSCRIPTS_DIR = \"/tmp/scripts\"\ndef execute_script_in_jail(script):\n    \"\"\"Execute a Python script in an nsjail environment.\"\"\"\n    os.makedirs(SCRIPTS_DIR, exist_ok=True)\n    with tempfile.NamedTemporaryFile(\n        suffix=\".py\", delete=False, dir=SCRIPTS_DIR",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "NSJAIL_PATH",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "NSJAIL_PATH = \"/usr/bin/nsjail\"\nPYTHON_PATH = \"/usr/local/bin/python3\"\nNSJAIL_CONFIG_PATH = \"/app/nsjail.config\"\nSCRIPTS_DIR = \"/tmp/scripts\"\ndef execute_script_in_jail(script):\n    \"\"\"Execute a Python script in an nsjail environment.\"\"\"\n    os.makedirs(SCRIPTS_DIR, exist_ok=True)\n    with tempfile.NamedTemporaryFile(\n        suffix=\".py\", delete=False, dir=SCRIPTS_DIR\n    ) as tmp:",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "PYTHON_PATH",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "PYTHON_PATH = \"/usr/local/bin/python3\"\nNSJAIL_CONFIG_PATH = \"/app/nsjail.config\"\nSCRIPTS_DIR = \"/tmp/scripts\"\ndef execute_script_in_jail(script):\n    \"\"\"Execute a Python script in an nsjail environment.\"\"\"\n    os.makedirs(SCRIPTS_DIR, exist_ok=True)\n    with tempfile.NamedTemporaryFile(\n        suffix=\".py\", delete=False, dir=SCRIPTS_DIR\n    ) as tmp:\n        tmp_path = tmp.name",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "NSJAIL_CONFIG_PATH",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "NSJAIL_CONFIG_PATH = \"/app/nsjail.config\"\nSCRIPTS_DIR = \"/tmp/scripts\"\ndef execute_script_in_jail(script):\n    \"\"\"Execute a Python script in an nsjail environment.\"\"\"\n    os.makedirs(SCRIPTS_DIR, exist_ok=True)\n    with tempfile.NamedTemporaryFile(\n        suffix=\".py\", delete=False, dir=SCRIPTS_DIR\n    ) as tmp:\n        tmp_path = tmp.name\n        wrapper_script = f\"\"\"",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "SCRIPTS_DIR",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "SCRIPTS_DIR = \"/tmp/scripts\"\ndef execute_script_in_jail(script):\n    \"\"\"Execute a Python script in an nsjail environment.\"\"\"\n    os.makedirs(SCRIPTS_DIR, exist_ok=True)\n    with tempfile.NamedTemporaryFile(\n        suffix=\".py\", delete=False, dir=SCRIPTS_DIR\n    ) as tmp:\n        tmp_path = tmp.name\n        wrapper_script = f\"\"\"\nimport io",
        "detail": "app",
        "documentation": {}
    },
    {
        "label": "stdout_capture",
        "kind": 5,
        "importPath": "app",
        "description": "app",
        "peekOfCode": "stdout_capture = io.StringIO()\ntry:\n    with redirect_stdout(stdout_capture):\n        result = main()\n    # Validate JSON serialization\n    json.dumps(result)\n    print(json.dumps({{\"result\": result, \n                     \"stdout\": stdout_capture.getvalue()}}))\n    sys.exit(0)\nexcept Exception as e:",
        "detail": "app",
        "documentation": {}
    }
]